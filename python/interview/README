http://tanninop.marchtea.com/
第一章：字符串
	1.1 旋转字符串 
	1.2 字符串包含
	1.3 字符串转换成整数
	1.4 回文判断
	1.5 最长回文子串
	1.6 字符串的全排列
	1.7 将一个0-1 串进行排序，你可以交换任意两个位置，问最少交换的次数
	1.8 字符串的替换和复制
	1.9 一个字符串只包含*和数字，请把它的*号都放在开头
	1.10	子串变位词	
	
全排列
第二章

 笔试和面试中，除了字符串，另一类出现频率极高的问题便是与数组相关的问题。在阅读完第1章和本第二章后，读者会慢慢了解到解决面试编程题的有几种常用思路。首先一般考虑“万能的”暴力穷举（递归、回溯），如求n个数的全排列或八皇后（N皇后问题）。但因为穷举时间复杂度通常过高，所以需要考虑更好的方法，如分治法（通过分而治之，然后归并），以及空间换时间（如活用哈希表）。

此外，选择合适的数据结构可以显著提升效率，如寻找最小的k个数中，用堆代替数组。

再有，如果题目允许排序，则可以考虑排序。比如，寻找和为定值的两个数中，先排序，然后用前后两个指针往中间扫。而如果如果已经排好序了（如杨氏矩阵查找中），则想想有无必要二分。但是，如果题目不允许排序呢？这个时候，我们可以考虑不改变数列顺序的贪心算法（如最小生成树Prim、Kruskal及最短路dijkstra），或动态规划（如 01背包问题，每一步都在决策）。

最后，注意细节处理，不要忽略边界条件，如字符串转换成整数。 

    2.0 本章导读
    2.1 寻找最小的 k 个数
    2.2 寻找和为定值的两个数
    2.3 寻找和为定值的多个数
    2.4 最大连续子数组和
    2.5 跳台阶
    2.6 奇偶排序
    2.7 荷兰国旗
    2.8 矩阵相乘
    2.9 完美洗牌
    2.15 本章习题


第四章 查找匹配 
    4.1 有序数组的查找
    4.2 行列递增矩阵的查找
    4.3 出现次数超过一半的数字

